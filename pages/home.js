import Image from "next/image";
import ExploreIcon from "@mui/icons-material/Explore";
import GroupIcon from "@mui/icons-material/Group";
import OndemandVideoSharpIcon from "@mui/icons-material/OndemandVideoSharp";
import BusinessCenterIcon from "@mui/icons-material/BusinessCenter";
import ArrowForwardIosRoundedIcon from "@mui/icons-material/ArrowForwardIosRounded";
import HeaderLink from "../components/HeaderLink";
import Head from "next/head";
import { getProviders, signIn } from "next-auth/react";

const Home = ({ providers = {} }) => {
  // Defensive check: if providers is null or empty object, don't crash
  const providerList = providers ? Object.values(providers) : [];

  return (
    <div className="space-y-10">
      <Head>
        <title>LinkedIn</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <header className="flex justify-around items-center py-4">
        {/* LinkedIn Logo */}
        <div className="relative w-36 h-10">
          <Image
            src="https://rb.gy/vtbzlp"
            alt="LinkedIn Logo"
            width={140}
            height={40}
          />
        </div>

        {/* Navigation Links + Sign-in */}
        <div className="flex items-center sm:divide-x divide-gray-300">
          <div className="hidden sm:flex space-x-8 pr-4">
            <HeaderLink Icon={ExploreIcon} text="Discover" />
            <HeaderLink Icon={GroupIcon} text="People" />
            <HeaderLink Icon={OndemandVideoSharpIcon} text="Learning" />
            <HeaderLink Icon={BusinessCenterIcon} text="Jobs" />
          </div>

          {/* Google Sign-in Button */}
          {providerList.length > 0 &&
            providerList.map((provider) => (
              <div key={provider.name} className="pl-4">
                <button
                  onClick={() => signIn(provider.id, { callbackUrl: "/" })}
                  className="text-blue-700 font-semibold rounded-full border border-blue-700 px-5 py-1.5 hover:bg-blue-50"
                >
                  Sign In with {provider.name}
                </button>
              </div>
            ))}
        </div>
      </header>

      {/* Main Content */}
      <main className="flex flex-col xl:flex-row items-center max-w-screen-lg mx-auto">
        <div className="space-y-6 xl:space-y-10">
          <h1 className="text-3xl md:text-4xl text-amber-800/80 max-w-xl !leading-snug pl-4 xl:pl-0">
            Welcome to your professional community
          </h1>

          <div className="space-y-4">
            <div className="intent flex justify-between items-center px-4 py-2 bg-white rounded-md shadow-md cursor-pointer hover:bg-gray-100">
              <h2 className="text-xl">Search for a job</h2>
              <ArrowForwardIosRoundedIcon className="text-gray-700" />
            </div>
            <div className="intent flex justify-between items-center px-4 py-2 bg-white rounded-md shadow-md cursor-pointer hover:bg-gray-100">
              <h2 className="text-xl">Find a person you know</h2>
              <ArrowForwardIosRoundedIcon className="text-gray-700" />
            </div>
            <div className="intent flex justify-between items-center px-4 py-2 bg-white rounded-md shadow-md cursor-pointer hover:bg-gray-100">
              <h2 className="text-xl">Learn a new skill</h2>
              <ArrowForwardIosRoundedIcon className="text-gray-700" />
            </div>
          </div>
        </div>

        {/* Illustration */}
        <div className="relative w-80 h-80 xl:w-[550px] xl:h-[550px] top-14 right-5">
          <Image
            src="https://rb.gy/vkzpzt"
            alt="Hero Illustration"
            layout="fill"
            objectFit="contain"
            priority
          />
        </div>
      </main>
    </div>
  );
};

export default Home;

export async function getServerSideProps() {
  try {
    const providers = await getProviders();
    return {
      props: {
        providers: providers || {},
      },
    };
  } catch (error) {
    console.error("Error fetching providers:", error);
    return {
      props: {
        providers: {},
      },
    };
  }
}
